# Setting constant values needed later on in memory locations.
# Mem[0] = 0xFF00
# Mem[1] = 0x00FF
addi $0, $0, 7
sll $0, $0, 3
addi $0, $0, 7
sll $0, $0, 2
addi $0, $0, 3
sw $0, 0($1)
sll $0, $0, 7
sll $0, $0, 1
sw $0, 1($1)

#Setting data memory initial contents
sll $6, $6, 7
sll $6, $6, 7
sll $6, $6, 7
addi $6, $6, 16
sll $0, $0, 7
sll $0, $0, 7
sll $0, $0, 7
addi $0, $0, 1
sll $0, $0, 7
sll $0, $0, 1
addi $0, $0, 1
sw $0, 0($6)
addi $0, $0, 15
sw $0, 1($6)
srl $0, $0, 4
sw $0, 2($6)
addi $0, $0, 13
sll $0, $0, 3
sw $0, 3($6)
ori $0, $0, 15

#Setting register initial contents
sll $7, $7, 7
sll $7, $7, 7
sll $7, $7, 7
addi $7, $7, 5
sll $5, $5, 7
sll $5, $5, 7
sll $5, $5, 7
addi $5, $5, 2
sll $4, $4, 7
sll $4, $4, 7
sll $4, $4, 7
addi $4, $4, 15
sll $4, $4, 4
sll $3, $3, 7
sll $3, $3, 7
sll $3, $3, 7
addi $3, $3, 15
sll $2, $2, 7
sll $2, $2, 7
sll $2, $2, 7
addi $2, $2, 16
sll $2, $2, 7
sll $2, $2, 1
addi $2, $2, 16
sll $1, $1, 7
sll $1, $1, 7
sll $1, $1, 7
addi $1, $1, 40

# While loop for test program.
        sll $0, $0, 7
        sll $0, $0, 7
        sll $0, $0, 7
        beq $7, $0, end
while:  subi $7, $7, 1;
        sll $0, $0, 7
        sll $0, $0, 7
        sll $0, $0, 7
        bne $5, $0, if
        nop
        beq $0, $0, else
        nop
if:     srl $1, $1, 3
        or $2, $2, $1
        sll $0, $0, 7
        sll $0, $0, 7
        sll $0, $0, 7
        lw $0, 0($0)
        sw $0, 0($6)
        subi $5, $5, 1
        beq $0, $0, loop
        nop
else:   sll $3, $3, 2
        xor $4, $4, $3
        sll $0, $0, 7
        sll $0, $0, 7
        sll $0, $0, 7
        lw $0, 1($0)
        sw $0, 0($6)
loop:   addi $6, $6, 1
        sll $0, $0, 7
        sll $0, $0, 7
        sll $0, $0, 7
        bne $7, $0, while
        nop
end:
        